/*jhi_authority:
name
ROLE_SUPERADMIN
ROLE_ADMIN
ROLE_CENTERHEAD		
ROLE_ACCOUNTANT
ROLE_TEACHER
ROLE_STUDENT
ROLE_MANAGER
*/
entity Jhiauthority{
	name String required
}

/* 
jhi_persistent_audit_event:
event_id , principal , event_date , event_type 
1, 	admin,	2020:08:12 12:45:03, AUTHENICATION_SECCESS

entity jhi_persistent_audit_event{
	event_id Integer required
	principal String
	event_date Date
	event_type String
}

jhi_persistent_audit_evt_data:
event_id, name, value

3. features:
id,	featureId,	featureDetail
1,	STUREG,		student registration
2,	ASNCRE,		assignment creation
3,	SALARY,		salary generation
*/

entity Features{
	featureId String unique required 
	featureDetail String unique required
}

/*
3. roleAcess:
roleId,		featureId,	create, read, update, delete
ADMIN,		STUREG,		true,	true,	true,	false
ACCOUNTANT,	SALARY,		true,	true,	true,	false
ADMIN,		SALARY,		true,	true,	true,	false
*/
entity RoleAccess{
	create Boolean
	read Boolean
	update Boolean
	del Boolean
}

/*
4. jhi_user:
id, login, password_hash, first_name, last_name, email, image_url,activated,lang_key,activation_key,reset_key,created_by,created_date,reset_date,last_modified_by,last_modified_date
1. kunchitGoyal, hsadksa,	Kunchit, Goel, 	abc@gmail.com, URL1,0, 		EN,	NULL,	NULL,	     ShivRaturi,2020:08:12 12:45:03,NULL,ShivRaturi,2020:08:12 12:45:03
12, AniketKhanchi,fdsfrew, 	Aniket, Khanchi,abce@gmail.com, URL2,1, 	EN,	NULL,	NULL,	     ShivRaturi,2020:08:12 12:45:03,NULL,ShivRaturi,2020:08:12 12:45:03


entity jhi_user{
	login  String required
	password_hash  String required
	first_name  String required
	last_name  String required
	email  String required
	image_url  String
	activated Boolean
	lang_key   String
	activation_key String
	reset_key  String
	created_by  String
	created_date LocalDate
	reset_date LocalDate
	last_modified_by String
	last_modified_date LocalDate
}
*/

enum City{
	GURGAON, DELHI, DEHRADUN
}

enum State{
	DELHI, HARYANA, UTTRAKHAND, MADHYAPRADESH
}

/*
4. UserDetails:
id, userId, mobileNo,	DOB, 		houseNo, streetNo,	city, 	state, 	pincode
10, 1, 999999, 	07-07-90, 	T1-801,	Taksila heights,Gurgaon, Haryana, 122001
12, 12, 88888,	07-07-89, 	T2,	Taksila heights,Gurgaon, Haryana, 122001
*/

entity UserDetails{
	mobileNo String unique required
	dob LocalDate required
	houseNo String required
	streetNo Integer	
	city City required
	state State required
	pincode Integer
}

/*
UserPreferences:
id, userId, theme
1,	12,	BEACH
*/
entity UserPreferences{
	theme String
}

/*4. studentsStatus:
id, StatusCode, Status
1, LF, Left
*/
enum StudentStatus{
	GRADUATED, JOINED, LEFT
}

/*
5. leavingReasons:
id, reasonCode, reason
1, DF, distanceFactor
2, HF, High Fee
*/
enum LeavingReasons{
	DISTANCEFACTOR, UNHAPPYPHYSICS, UNHAPPYMATHS, UNHAPPYBIO, UNHAPPYCHEMISTRY, UNHAPPYMANAGEMENT, HIGHFEES, CLASSESOVERLAP, COURSECOMPLETED, BREAKEXAM, BREAKHOLIDAY, PERSONALREASON
}
/*
6. courses:
id, courseId, 	course
1,   X, 	Intermediate
2,  CLAT, 	CLAT Entrance
*/
entity Courses{
	courseId String unique required	
	course String unique required
}

/*
7.infoSources:
id, sourceCode, source
1, PM,	Pamphlets
2, BN,	Banners
3, FR,	Friends
*/
enum InfoSources{
	LOCATIONDIRECTLY, FRIENDS, BANNER, INTERNET, PAMPHLET, NEWSPAPER
}

/*
8. students:
id, userId, studentRegId, registrationForm, course, parentMobNo1, parentMobNo2, parentEmailId, studentStatus,leavingReason, infoSource
100, 10, RA_GGN_2019-20-001,  ImageBlob,     X, 	9999,    8888, 		abc2@gmail.com, LF,	 	DF,		FR
*/
entity Students{
	studentRegId String required unique
	registrationForm ImageBlob
	parentMobNo1 String 
	parentMobNo2 String
	parentEmailId String pattern(/^[^@\s]+@[^@\s]+\.[^@\s]+$/)
    studentStatus StudentStatus
    leavingReason LeavingReasons 
    infoSource InfoSources
}

/*
9. subjects:
id, subjectCode, subjectTitle
1,  PH,		Physics
2,  CH,		Chemistry
3,  MA,		Mathematics
4,  IM,		IIT-Mathematics
*/
entity Subjects{
	subjectCode String unique required
	subjectTitle String unique required
}

/*
10. AcademicSessions:
id, AcadSessionId, AcadSession
1, 2020-21,	Academic Year 2020-21
*/
entity AcademicSessions{
	acadSessionId String unique required
	acadSession String unique required
}

enum Month{
	JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC
}

/*
11. studentsSubjects:
id, studentRegId, subjectCode1, subjectCode2,subjectCode3,subjectCode4,subjectCode5,subjectCode6,subjectCode7,subjectCode8,courseId, month, AcadSessionId
1,  RA_GGN_2019-20-001,PH,		CH,	MA,	     IIT-Math,     null,	null,		null,	null,	    XI,      JAN, 2020-21
*/
entity StudentsSubjects{	
    month Month required
}

/*
12. subjectsBaseFee:
id, courseId, baseFee, AcadSession
1,   IX,	1850,	2020-21
2,   X,		2150,	2020-21
3,   XI,	2450,	2020-21
*/
entity SubjectsBaseFee{	 
	baseFee Integer 
}

/*
13. discounts:
id, subject2,subject3,subject4,subject5,subject6,subject7,subject8, quarterly, halfYearly, annually, sibling, referral,AcadSessionId
1,	200,	  300,	   600,	   700,	    800,   1000,    1100,    4%,	7%,		9%,	10%,	200,	2020-21
*/
entity Discounts{
	subject2 Integer 
	subject3 Integer
	subject4 Integer
	subject5 Integer
	subject6 Integer
	subject7 Integer
	subject8 Integer
	quarterly Integer 
	halfYearly Integer
	annually Integer
	sibling Integer
	referral Integer
}

/*
14. scholarsips:
id, minMarks, percent, AcadSessionId
1,   85%,	2%,		2020-21
2,   90%,	3%,		2020-21
3,   95%,	4%,		2020-21
*/
entity Scholarships{	
	minMarks Integer
	percent Integer   
}


/*
15. studentsFee:
id, studentRegId,      subjectCode, fee, feeCorrection, month, AcadSessionId, teacherId, feeStatus
1,  RA_GGN_2019-20-001,   MA,   2200,      null, 	 JAN,    2020-21,   GGN002,  NotPaid
2,  RA_GGN_2019-20-001,   PH,   2300,      -300, 	 JAN,    2020-21,   GGN003,  Paid
3,  RA_GGN_2019-20-002,   PH,   2500,      400, 	 FEB,    2020-21,   GGN003,  Paid
*/
entity StudentFees{
	fee Integer 
	feeCorrection Integer 
	month Month
	feeStatus Boolean
	remarks String
}

enum JobNature{
	PARTTIME, FULLTIME
}
/*
16. employees:
id, userId, empolyeeId, jobNature,	BGC,		resume,			PAN,		accountNo,	bank,	ifsc
1,   12,    GGN002,	PARTTIME,	CLEAR,		resumeAttached,		AHNPR08087,	121323,		SBI,	SBI83023
*/
entity Employees{	
	employeeId String required unique
	jobNature JobNature	
	bgc Boolean
	resume ImageBlob	
	pan String required
	accountNo String required	
	bank String required	
	ifsc String required
}
/*
17. centers:
id, centerCode, centerTitle,	streetno,					city,	state,	pincode
1,  GGN_SEC3, 	Gurgaon Sec3, 	Shop No 13, Sector 3 		Gurgaon,Haryana, 122001
2,  GGN_SEC4, 	Gurgaon Sec4, 	Shop No 13-14, Sector 4, 	Gurgaon,Haryana, 122001
3,  DDN_SUM, 	Ddun Sumannagar,HNo 37/C, Suman Nagar 		Dehradun,Uttrakhand, 248001
*/
entity Centers{
	centerCode String unique required	
	centerTitle String unique required
	streetNo Integer	
	city City required
	state State required
	pincode Integer 
}
/*
18. centerHeads:
id, empolyeeId, centerCode
1, GGN003,	GGN_SEC4
2, GGN004,	DDN_SUM
*/
entity CenterHead{

}


/*
19. teachers:
id, empolyeeId, subjectCode1, subjectCode2, subjectCode3,courseId
1, GGN002,	PH,		MA,		CH	
*/
entity Teachers{
	
}
/*
20. teachersShare:
id, teacherId, share%, plannedClasses, actualClasses, shareCorrection, subjectId, course, month,  AcadSessionId
1,   GGN002,	  80%,		17,    	15,   		null,		MA,	    X,    JAN,    2020-21
*/
entity TeachersShare{	
	share Integer required max(100) 
	plannedClasses Integer required
	actualClasses Integer required
	shareCorrection Integer
	month Month
	remarks String
}

/*
21. salariesPayment:
id, employeeId, salary,       paid, 	unpaid,	date, 		transactionId, mode,	remarks
1.  GGN002,	15000,	      13000,    2000,	31-Aug-20,      IMPS00002,	NEFT,	200 balance
2.  GGN002,	5000,	      5000,     0,	31-Aug-20,      IMPS00003,	Paytm,	paid
*/

enum Mode{
	NEFT, UPI, CASH, DEBITCARD, NETBANKING, OTHERS
}

entity SalariesPayment{
	salary Integer required min(0)
	deduction Integer  // default value is zero
	paid Integer 	min(0) required
	unpaid Integer	min(0) required
	date LocalDate 	required	
	transactionId String required
	paymentMode Mode
	remarks String
}
/*
22. expensesTypes:
id, expenceTypeId, Detail
1. OPERATING, Operating expenses
2. MARKETING, Marketing expenses
3. FIXASSET, Fix assets
*/

enum ExpensesType{
	OPERATING, MARKETING, FIXASSET
}

/*
23. expenses:
id, item, quantity,    rate, 	laborCost,  otherExpense, total, date, transactionId, mode, 	  type, 	   bill, 	   remarks
1, Chairs,   10,        400,       200,		1000,	   5200  07-07-20, IMPS68676, Debit Card, FIXASSET,  billAttachment, purchased from Sadar bazar
2, Signboard, 5,       10000,      3000,	2000,	  65000  10-07-20, IMPS67676, Debit Card, MARKETING, billAttachment, purchased from xyz shop
*/
entity Expenses{
	item String required 
	quantity Integer min(0)   
	rate Integer min(0)	
	laborCost Integer min(0) 
	otherExpense Integer 
	total Integer required
	date LocalDate 
	transactionId String required  
	expenseMode Mode	  
	type ExpensesType
	bill ImageBlob	   
	remarks String
}
/*
24. chapters:
id,	courseId,	subject,	chapterId,	chapterTitle
1, 	XII,		MA,		DE,		differential equations
2, 	3,		MA,		ADD,		simple addition
*/
entity Chapters{	
	chapterId String required	
	chapterTitle String
}
/*
25. questionLevel:
id,	levelId,
1,	BEGINNERS
2,	MODERATE
1,	ADVANCE
*/
enum QuestionLevel{
	BEGINNERS, MODERATE, ADVANCE
}
/*
26. questions:
id, courseId,subjectId,chapterId, question,	option1,	option2, option3,	option4, 	answer, 	maxMarks,	negativeMarks, level
1, 3,		MA,	ADD,	29+39		48		58	68		78		68,	4,	1,		BEGINNERS
2, 3,		MA,	ADD,	19+39		48		58	68		78		58,	4,	1,		MODERATE
*/
entity Questions{ 
	question TextBlob required
	diagram	ImageBlob
	option1 String 	
	option2 String	
	option3 String	
	option4 String 	
	answer String 	required
	maxMarks Integer required	
	negativeMarks Integer
	level QuestionLevel required
}
/*
27. studentsScore:
id, studentRegId,      	questionId, answer,	score,	date
1,  RA_GGN_2019-20-001,	1,	     68,	4,	07-09-2020
2,  RA_GGN_2019-20-001	2,	     78,	-1,	07-09-2020
*/
entity StudentScore{
	answer String required
	score Integer required
	date LocalDate required
}
//DONE UPTO HERE

relationship OneToOne{
	UserDetails{user(login)} to User,
	UserPreferences{user(login)} to User,
	Students{user(login)} to User,
	StudentsSubjects{registrationno(studentRegId)} to Students,
	StudentFees{registrationno(studentRegId)} to Students,
	Employees{user(login)} to User,
   	CenterHead{centerhead(employeeId)} to Employees,
   	Teachers{teacher(employeeId)} to Employees
}

relationship ManyToMany{
    Students{course(course)} to Courses{Students},
    StudentsSubjects{subjects(subjectTitle)} to Subjects{studentsubject},
    StudentsSubjects{course(course)} to Courses{studentsubjects},
    CenterHead{center(centerTitle)} to Centers{centerhead},    
    Teachers{subjects(subjectTitle)} to Subjects{teachers},    
    Teachers{courses(course)} to Courses{teachers}
}

relationship ManyToOne{
	RoleAccess{role(name)} to Jhiauthority,
	RoleAccess{feature(featureDetail)} to Features,
	StudentsSubjects{session(acadSession)} to AcademicSessions,	
	SubjectsBaseFee{course(course)} to Courses,
	SubjectsBaseFee{session(acadSession)} to AcademicSessions,
	Discounts{session(acadSession)} to AcademicSessions,
	Scholarships{session(acadSession)} to AcademicSessions,	
    StudentFees{subject(subjectTitle)} to Subjects,    
    StudentFees{session(acadSession)} to AcademicSessions,    
    StudentFees{teacher(employeeId)} to Employees,
    TeachersShare{teacher(employeeId)} to Employees,        
    TeachersShare{subject(subjectTitle)} to Subjects,    
    TeachersShare{course(course)} to Courses,    
    TeachersShare{session(acadSessionId)} to AcademicSessions,
    SalariesPayment{employee(employeeId)} to  Employees,    
    Expenses{incurredBy(employeeId)} to Employees,    
	Chapters{course(course)} to Courses,
	Chapters{subject(subjectTitle)} to Subjects,    
	Questions{course(course)} to Courses,	
    Questions{subject(subjectTitle)} to Subjects,    
    Questions{chapter(chapterTitle)} to Chapters,
    StudentScore{student(studentRegId)} to Students,
    StudentScore{questionId} to Questions	
}

// =======
// Options
// =======

// Set pagination options

//service UserDetails, Students, StudentFees, TeachersShare, SalariesPayment, Expenses, Questions, StudentScore with serviceClass

paginate UserDetails, Students, StudentFees, TeachersShare, SalariesPayment, Expenses, Questions, StudentScore with pagination


dto * with mapstruct

// Set service options to all 
service all with serviceImpl 
// Set an angular suffix
angularSuffix * with mySuffix